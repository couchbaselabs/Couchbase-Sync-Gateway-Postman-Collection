{
	"info": {
		"name": "Sync Gateway Admin (github)",
		"_postman_id": "27727651-29bc-4b84-9ea1-983c076493d3",
		"description": "Documentation for the Sync Gateway Admin REST API. This page is generated from the Sync Gateway Admin Swagger spec, the exact same information is also available at [developer.couchbase.com/mobile/swagger/sync-gateway-admin](http://developer.couchbase.com/mobile/swagger/sync-gateway-admin/).\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "server",
			"description": "Folder for _config",
			"item": [
				{
					"name": "Server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fbc307a-81f0-426b-bf59-cac9b4fac9eb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Server Config Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var db = pm.environment.get(\"db\");",
									"    pm.expect(jsonData[\"Databases\"][db]).to.exist;",
									"   ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/_config",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_config"
							]
						},
						"description": "Returns the Sync Gateway configuration of the running instance. This is a good method to check if a \nparticular key was set correctly on the config file.\n"
					},
					"response": [
						{
							"id": "7b603d22-3614-4805-a99b-245d1bfc58a9",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/_config",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "582",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 16:25:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"Interface\":\":4984\",\"AdminInterface\":\":4985\",\"log\":[\"*\"],\"Databases\":{\"demodb\":{\"server\":\"http://cb-server-demo:8091\",\"pool\":\"default\",\"bucket\":\"demodb\",\"username\":\"admin\",\"password\":\"password\",\"name\":\"demodb\",\"users\":{\"admin\":{\"name\":\"demo\",\"admin_channels\":[\"*\"],\"all_channels\":null,\"password\":\"password\"},\"demo\":{\"name\":\"demo\",\"all_channels\":null,\"password\":\"password\"},\"tester\":{\"name\":\"demo\",\"all_channels\":null,\"password\":\"password\"}},\"import_docs\":\"continuous\",\"unsupported\":{\"user_views\":{},\"replicator_2\":true,\"oidc_test_provider\":{}},\"enable_shared_bucket_access\":true}}}"
						}
					]
				},
				{
					"name": "Server",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19bdd88e-109a-44aa-af7b-5c8cc47d88d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}",
							"host": [
								"{{adminurl}}"
							]
						},
						"description": "Returns meta-information about the server.\n"
					},
					"response": [
						{
							"id": "eaed04ad-f4b3-4a77-a5a9-4804a0d39e81",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}",
									"host": [
										"{{adminurl}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "145",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 02:47:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"ADMIN\":true,\"couchdb\":\"Welcome\",\"vendor\":{\"name\":\"Couchbase Sync Gateway\",\"version\":1.5},\"version\":\"Couchbase Sync Gateway/1.5.0(594;e78dbf1)\"}"
						}
					]
				}
			]
		},
		{
			"name": "logging",
			"description": "Folder for _expvar",
			"item": [
				{
					"name": "Specify logging tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfbc70dc-6dfe-4577-8365-de06226eb9a0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"*\": true,\n  \"Access\": true,\n  \"Attach\": true,\n  \"Auth\": true,\n  \"Bucket\": true,\n  \"Cache\": true,\n  \"Changes\": true,\n  \"CRUD\": true,\n  \"DCP\": true,\n  \"Events\": true,\n  \"Feed\": true,\n  \"HTTP\": true\n}"
						},
						"url": {
							"raw": "{{adminurl}}/_logging",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_logging"
							]
						},
						"description": "Log keys specify functional areas. Enabling logging for a log key provides additional diagnostic information for that area.\n\nFollowing are descriptions of the log keys that you can specify as a comma-separated list in the Log property. In some cases, a log key has two forms, one with a plus sign (+) suffix and one without, for example CRUD+ and CRUD. The log key with the plus sign logs more verbosely. For example for CRUD+, the log contains all of the messages for CRUD and additional ones for CRUD+.\n"
					},
					"response": [
						{
							"id": "da7863ad-5cb5-4754-be8e-0a78088e58c1",
							"name": "200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"*\": true,\n  \"Access\": true,\n  \"Attach\": true,\n  \"Auth\": true,\n  \"Bucket\": true,\n  \"Cache\": true,\n  \"Changes\": true,\n  \"CRUD\": true,\n  \"DCP\": true,\n  \"Events\": true,\n  \"Feed\": true,\n  \"HTTP\": true\n}"
								},
								"url": {
									"raw": "{{adminurl}}/_logging",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_logging"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 16:38:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Debugging/monitoring at runtime",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89e49903-2970-4fb1-a2f5-63d0f4b7305c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/_expvar",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_expvar"
							]
						},
						"description": "Number of runtime variables that you can view for debugging or performance monitoring purposes."
					},
					"response": [
						{
							"id": "e4aeaac1-688f-49de-8904-ccde9627a4ea",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/_expvar",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_expvar"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 16:26:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked",
									"name": "Transfer-Encoding",
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
								}
							],
							"cookie": [],
							"body": "{\n\"cb\": {\"ops\": {}, \"pools\": {}},\n\"cmdline\": [\"sync_gateway\",\"-adminInterface\",\":4985\",\"/etc/sync_gateway/sync_gateway.json\"],\n\"goroutine_stats\": {\"HighWaterMark\":24,\"Snapshots\":[24]}\n,\n\"mc\": {\"recv\": {\"bytes\":{\"0x1f\":28,\"0x89\":24,\"SASL_AUTH\":24,\"SASL_LIST_MECHS\":66,\"UPR_OPEN\":24,\"total\":166},\"errs\":{},\"ops\":{\"0x1f\":1,\"0x89\":1,\"SASL_AUTH\":1,\"SASL_LIST_MECHS\":1,\"UPR_OPEN\":1,\"total\":5}}, \"tap\": {\"bytes\":{},\"errs\":{},\"ops\":{}}, \"xmit\": {\"bytes\":{\"0x1f\":101,\"0x89\":30,\"NOOP\":9600,\"SASL_AUTH\":44,\"SASL_LIST_MECHS\":24,\"UPR_CONTROL\":137,\"UPR_OPEN\":90,\"UPR_STREAMREQ\":73728,\"total\":83754},\"errs\":{},\"ops\":{\"0x1f\":1,\"0x89\":1,\"NOOP\":400,\"SASL_AUTH\":1,\"SASL_LIST_MECHS\":1,\"UPR_CONTROL\":3,\"UPR_OPEN\":1,\"UPR_STREAMREQ\":1024,\"total\":1432}}},\n\"memstats\": {\"Alloc\":5790768,\"TotalAlloc\":2049004008,\"Sys\":14395640,\"Lookups\":61,\"Mallocs\":43578435,\"Frees\":43553941,\"HeapAlloc\":5790768,\"HeapSys\":9994240,\"HeapIdle\":2605056,\"HeapInuse\":7389184,\"HeapReleased\":0,\"HeapObjects\":24494,\"StackInuse\":1540096,\"StackSys\":1540096,\"MSpanInuse\":99840,\"MSpanSys\":114688,\"MCacheInuse\":2400,\"MCacheSys\":16384,\"BuckHashSys\":1463259,\"GCSys\":585728,\"OtherSys\":681245,\"NextGC\":7461949,\"LastGC\":1516983969163180562,\"PauseTotalNs\":527760617,\"PauseNs\":[93589,6690750,366863,131643,74611,384243,1470952,201760,474537,362570,94088,1630962,751406,694376,843298,1090105,171197,186778,106973,541557,504700,306237,431487,704562,407814,1986040,526875,336400,175491,349785,148623,1041762,2597812,342792,567326,7571401,164704,361169,232324,116561,521580,417703,85398,1022784,421399,205955,78507,146026,1805454,644534,2579933,156213,173793,651125,127049,442674,125252,556839,105175,102379,56134,397027,92690,548248,450365,746912,197266,199664,189675,649829,188776,1237729,103677,295549,333605,663610,278069,164805,152519,300043,375453,521680,210550,62425,341494,171596,372257,617166,550645,115662,2237940,131444,379450,1429100,202459,1661423,185180,111468,1551954,908120,308933,115663,549247,470040,286060,541356,232024,549547,287458,793757,103576,992820,910518,578912,187477,888945,645733,125851,396429,1784380,372058,500306,464847,373257,582607,357475,388638,460952,697571,103677,169399,150121,303239,1413918,522080,302641,106274,192970,278569,1478842,85098,1726848,712154,95786,424696,87495,344590,95886,111168,255795,62526,312229,325414,758798,358474,257194,159810,97883,164305,259491,1757911,96686,333004,292452,110868,1552555,401824,322516,473137,1271189,103276,440177,509095,352980,313827,413608,506099,335002,884849,423997,422098,458455,128447,64124,84799,168400,171995,5355435,539958,279767,321219,107372,1791072,1137148,2535187,574217,318521,124152,289456,295049,358273,127248,515986,519383,572019,1061239,373756,996416,97284,165303,92390,404419,90492,289057,734428,419900,678893,1263398,55634,947274,428690,474137,498108,483825,478831,121355,112865,136338,471241,789761,662313,92990,106874,635845,1267893,79206,215444,1846505,138136,122754,419502,65023,190774,626555,499207,6928465,459853,277869,468644,105974,3389272,1159522,552244,73312,327011,389937],\"PauseEnd\":[1516977438520090386,1516977466426447096,1516977488951555994,1516977513976323326,1516977539007597526,1516977564042104885,1516977591577117938,1516977614107399622,1516977641642644101,1516977666673595484,1516977694204251915,1516977721732524778,1516977746765474787,1516977771795697936,1516977796832518046,1516977824364952164,1516977849394686994,1516977874426721990,1516977901963421240,1516977926996138625,1516977952029858320,1516977977063251402,1516978002092282868,1516978027121644241,1516978052149301639,1516978079689212173,1516978107223208834,1516978134757659157,1516978159788161275,1516978184822868895,1516978212362604837,1516978234895373865,1516978262429914776,1516978289964866779,1516978312495983587,1516978337538181400,1516978365062438615,1516978392598342087,1516978417631164544,1516978442660986267,1516978470201264340,1516978497735538948,1516978520272922107,1516978547804824335,1516978572838817501,1516978600366657057,1516978622894921055,1516978650425377901,1516978677961815638,1516978705492842306,1516978730523305268,1516978758055011828,1516978783084922357,1516978810621199237,1516978835651087983,1516978860683573642,1516978885715381007,1516978913249003142,1516978938281816212,1516978965809775477,1516978990846853079,1516979016072793838,1516979041101205639,1516979066133565148,1516979093671799102,1516979116199868783,1516979143736598724,1516979171282256157,1516979196309168639,1516979221340351846,1516979248867938054,1516979273900689397,1516979301430329265,1516979328962216362,1516979351484302054,1516979376519960542,1516979404051458701,1516979429080263035,1516979454106950086,1516979479131741688,1516979504167795108,1516979529196354932,1516979556724957333,1516979579255049510,1516979606792406206,1516979629323928084,1516979656860797461,1516979681896263877,1516979706925774073,1516979731952433456,1516979756986206385,1516979782015115794,1516979809548647736,1516979834579957726,1516979857108424019,1516979884640601876,1516979912173466516,1516979937201545009,1516979962234500901,1516979987265969063,1516980014795178250,1516980039828409615,1516980067363053238,1516980092400815812,1516980119930919337,1516980147464210968,1516980174999705111,1516980197526474357,1516980225059466055,1516980250093100416,1516980275126050091,1516980300159554007,1516980325196448194,1516980350238967296,1516980377777667210,1516980400310864517,1516980427842500626,1516980455372483800,1516980480407760009,1516980505433853332,1516980532962918497,1516980557997372584,1516980583031018731,1516980608064300910,1516980635606170258,1516980660638360036,1516980688170545292,1516980710707130772,1516980735734959533,1516980760765466511,1516980785804537311,1516980813345099012,1516980838378681335,1516980865907549434,1516980893448533733,1516980920987313153,1516980948518672491,1516980973551636649,1516981001081397387,1516981023614713053,1516981048645381339,1516981076182652451,1516981101213514107,1516981128747064242,1516981156280200768,1516981183806192984,1516981206325190367,1516981231349628857,1516981258882114956,1516981283906489522,1516981311429516563,1516981338963767165,1516981366502844031,1516981394040369141,1516981419070833669,1516981446602876795,1516981474138704323,1516981501673512562,1516981529201770686,1516981551732057551,1516981576766738369,1516981604294912792,1516981629325947642,1516981651861417748,1516981679388133705,1516981706919726765,1516981734458635631,1516981756991832439,1516981782025743471,1516981807065004245,1516981832094471359,1516981859628609594,1516981884660862497,1516981912202694189,1516981937237133793,1516981964775724337,1516981992310005203,1516982017343326636,1516982044877169023,1516982067406616287,1516982094941269211,1516982119977308214,1516982145018073200,1516982170049182762,1516982197585536864,1516982222610880678,1516982250143164917,1516982256121875514,1516982275177780911,1516982302713961819,1516982332746483250,1516982357778740048,1516982385318392730,1516982412869458647,1516982437898779734,1516982467925228782,1516982495453333987,1516982522972591807,1516982550492016229,1516982575514149359,1516982603043715029,1516982630575926954,1516982658105967259,1516982685642059073,1516982710674628599,1516982738207709591,1516982765741249438,1516982793276170543,1516982820806700567,1516982848375992025,1516982875903818661,1516982903445440703,1516982930968851187,1516982958505185813,1516982986039564562,1516983013579388141,1516983041112407706,1516983068651726485,1516983096182928110,1516983123713967429,1516983151249366266,1516983178783845896,1516983206314156580,1516983233852463961,1516983263911670378,1516983291442604421,1516983318971682071,1516983344006043068,1516983374043349812,1516983401578887284,1516983429111378577,1516983456645753132,1516983484181529121,1516983511716447729,1516983539244459645,1516983569276360913,1516983596814010275,1516983624350198974,1516983651885328132,1516983674410843468,1516983701942286507,1516983729474663336,1516983759508777573,1516983784543042785,1516983812075116773,1516983837111931355,1516983864661200907,1516983892201206270,1516983919733281158,1516983947265630819,1516983969158367082,1516983969163180562,1516977338396342886,1516977363427273843,1516977388460036723,1516977413492268135],\"NumGC\":1020,\"GCCPUFraction\":6.602273118341988e-05,\"EnableGC\":true,\"DebugGC\":false,\"BySize\":[{\"Size\":0,\"Mallocs\":0,\"Frees\":0},{\"Size\":8,\"Mallocs\":33739,\"Frees\":33531},{\"Size\":16,\"Mallocs\":3023289,\"Frees\":3018653},{\"Size\":32,\"Mallocs\":21214282,\"Frees\":21202568},{\"Size\":48,\"Mallocs\":174019,\"Frees\":171282},{\"Size\":64,\"Mallocs\":70462,\"Frees\":70117},{\"Size\":80,\"Mallocs\":42412,\"Frees\":42103},{\"Size\":96,\"Mallocs\":45077,\"Frees\":44704},{\"Size\":112,\"Mallocs\":17159,\"Frees\":16802},{\"Size\":128,\"Mallocs\":2183,\"Frees\":2133},{\"Size\":144,\"Mallocs\":21612,\"Frees\":20429},{\"Size\":160,\"Mallocs\":22082,\"Frees\":21725},{\"Size\":176,\"Mallocs\":22731,\"Frees\":22703},{\"Size\":192,\"Mallocs\":2105,\"Frees\":2083},{\"Size\":208,\"Mallocs\":10365,\"Frees\":10320},{\"Size\":224,\"Mallocs\":10192,\"Frees\":10183},{\"Size\":240,\"Mallocs\":10482,\"Frees\":10464},{\"Size\":256,\"Mallocs\":385,\"Frees\":361},{\"Size\":288,\"Mallocs\":10404,\"Frees\":10319},{\"Size\":320,\"Mallocs\":10451,\"Frees\":10278},{\"Size\":352,\"Mallocs\":2381,\"Frees\":2354},{\"Size\":384,\"Mallocs\":34,\"Frees\":17},{\"Size\":416,\"Mallocs\":156,\"Frees\":62},{\"Size\":448,\"Mallocs\":50,\"Frees\":45},{\"Size\":480,\"Mallocs\":10113,\"Frees\":10107},{\"Size\":512,\"Mallocs\":333,\"Frees\":170},{\"Size\":576,\"Mallocs\":71,\"Frees\":58},{\"Size\":640,\"Mallocs\":184,\"Frees\":142},{\"Size\":704,\"Mallocs\":20232,\"Frees\":20226},{\"Size\":768,\"Mallocs\":23,\"Frees\":20},{\"Size\":896,\"Mallocs\":61,\"Frees\":37},{\"Size\":1024,\"Mallocs\":10252,\"Frees\":10225},{\"Size\":1152,\"Mallocs\":31,\"Frees\":21},{\"Size\":1280,\"Mallocs\":133,\"Frees\":25},{\"Size\":1408,\"Mallocs\":17,\"Frees\":14},{\"Size\":1536,\"Mallocs\":10108,\"Frees\":10106},{\"Size\":1664,\"Mallocs\":23,\"Frees\":10},{\"Size\":2048,\"Mallocs\":172,\"Frees\":45},{\"Size\":2304,\"Mallocs\":12416,\"Frees\":11389},{\"Size\":2560,\"Mallocs\":20,\"Frees\":7},{\"Size\":2816,\"Mallocs\":26,\"Frees\":25},{\"Size\":3072,\"Mallocs\":3,\"Frees\":1},{\"Size\":3328,\"Mallocs\":13,\"Frees\":1},{\"Size\":4096,\"Mallocs\":10163,\"Frees\":10143},{\"Size\":4608,\"Mallocs\":6,\"Frees\":6},{\"Size\":5376,\"Mallocs\":10102,\"Frees\":10097},{\"Size\":6144,\"Mallocs\":18,\"Frees\":8},{\"Size\":6400,\"Mallocs\":3,\"Frees\":0},{\"Size\":6656,\"Mallocs\":2,\"Frees\":0},{\"Size\":6912,\"Mallocs\":3,\"Frees\":1},{\"Size\":8192,\"Mallocs\":10116,\"Frees\":10111},{\"Size\":8448,\"Mallocs\":50460,\"Frees\":50460},{\"Size\":8704,\"Mallocs\":0,\"Frees\":0},{\"Size\":9472,\"Mallocs\":0,\"Frees\":0},{\"Size\":10496,\"Mallocs\":19,\"Frees\":5},{\"Size\":12288,\"Mallocs\":10096,\"Frees\":10096},{\"Size\":13568,\"Mallocs\":1,\"Frees\":1},{\"Size\":14080,\"Mallocs\":0,\"Frees\":0},{\"Size\":16384,\"Mallocs\":4,\"Frees\":4},{\"Size\":16640,\"Mallocs\":0,\"Frees\":0},{\"Size\":17664,\"Mallocs\":10094,\"Frees\":10094}]},\n\"syncGateway_changeCache\": {\"lag-queue-0000ms\": 8, \"lag-tap-0000ms\": 5, \"lag-total-0000ms\": 5, \"lag-total-9223372036800ms\": 3, \"maxPending\": 0},\n\"syncGateway_db\": {\"document_gets\": 7, \"revisionCache_adds\": 5, \"revs_added\": 5, \"sequence_gets\": 2, \"sequence_reserves\": 9},\n\"syncGateway_dcp\": {\"dataUpdate_count\": 26, \"loadCheckpoint_count\": 1024, \"persistCheckpoint_count\": 8, \"setMetadata_count\": 1050},\n\"syncGateway_gocb\": {\"Get\": 1061, \"Set\": 3, \"SetRaw\": 8, \"SingleOps\": 0, \"Update_Get\": 22, \"Update_GetWithXattr\": 5, \"Update_Insert\": 1, \"Update_Replace\": 1, \"ViewOps\": 0, \"WriteCasWithXattr_Insert\": 5},\n\"syncGateway_httpListener\": {\"max_active\": 0, \"max_wait\": 0},\n\"syncGateway_index\": {},\n\"syncGateway_index_clocks\": {},\n\"syncGateway_rest\": {\"requests_0000ms\": 38, \"requests_0200ms\": 1},\n\"syncGateway_stats\": {\"bulkApi.BulkDocsPerDocRollingMean\": 0, \"bulkApi.BulkDocsRollingMean\": 0, \"bulkApi.BulkGetPerDocRollingMean\": 0, \"bulkApi.BulkGetRollingMean\": 0, \"changesFeeds_active\": 0, \"changesFeeds_total\": 0, \"goroutines_highWaterMark\": 24, \"handler.CheckAuthRollingMean\": 18352052, \"indexReader.getChanges.Count\": 0, \"indexReader.getChanges.Time\": 0, \"indexReader.getChanges.UseCached\": 0, \"indexReader.getChanges.UseIndexed\": 0, \"indexReader.numReaders.OneShot\": 0, \"indexReader.numReaders.Persistent\": 0, \"indexReader.pollPrincipals.Count\": 0, \"indexReader.pollPrincipals.Time\": 0, \"indexReader.pollReaders.Count\": 0, \"indexReader.pollReaders.Time\": 0, \"indexReader.seqHasher.GetClockTime\": 0, \"indexReader.seqHasher.GetHash\": 0, \"requests_active\": 1, \"requests_total\": 40, \"revisionCache_hits\": 0, \"revisionCache_misses\": 2, \"sequenceTiming\": {}}\n}\n"
						}
					]
				},
				{
					"name": "Logging tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b58a5149-0a8f-444b-905f-7aa0542084d0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/_logging",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_logging"
							]
						},
						"description": "Get logging tags of running instance.\n"
					},
					"response": [
						{
							"id": "a46d9ba1-b547-481e-969d-c7ed5d212df6",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/_logging",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_logging"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "22",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 16:36:38 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"*\":true,\"HTTP\":true}"
						}
					]
				}
			]
		},
		{
			"name": "sg_replicate",
			"description": "Folder for _replicate",
			"item": [
				{
					"name": "Starts a database replication operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51786012-e5b7-46be-81f6-4d8d7a54a0c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Start DB Replication Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var replId = jsonData[\"replication_id\"];",
									"    pm.expect(replId).to.eql(pm.environment.get(\"replicationId\"));",
									" ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"source\": \"{{localdb}}\",\n  \"target\": \"{{remotedb}}\",\n  \"continuous\": true,\n  \"query_params\": {},\n  \"cancel\":false,\n  \"replication_id\":\"{{replicationId}}\",\n  \"username\":\"admin\",\n  \"password\":\"password\"\n}"
						},
						"url": {
							"raw": "{{adminurl}}/_replicate",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_replicate"
							]
						},
						"description": "This request starts or cancels a database replication operation.\n\nYou can cancel continuous replications by adding the cancel field to the JSON request object and setting the value to true. Note that the structure of the request must be identical to the original for the cancellation request to be honoured. For example, if you requested continuous replication, the cancellation request must also contain the continuous field.\n"
					},
					"response": [
						{
							"id": "1114748b-e92b-41f8-8097-6ac6e55bc400",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"{{localdb}}\",\n  \"target\": \"{{remotedb}}\",\n  \"continuous\": true,\n  \"query_params\": {},\n  \"cancel\":false,\n  \"replication_id\":\"{{replicationId}}\",\n  \"username\":\"admin\",\n  \"password\":\"password\"\n}"
								},
								"url": {
									"raw": "{{adminurl}}/_replicate",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_replicate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "237",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 19:52:28 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"type\":\"replication\",\"replication_id\":\"repl101\",\"continuous\":true,\"source\":\"http://:4985/local_demodb\",\"target\":\"http://localhost:4984/demodb\",\"docs_read\":0,\"docs_written\":0,\"doc_write_failures\":0,\"start_last_seq\":0,\"end_last_seq\":null}"
						}
					]
				},
				{
					"name": "cancels a database replication operation copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"source\": \"{{localdb}}\",\n  \"target\": \"{{remotedb}}\",\n  \"continuous\": true,\n  \"query_params\": {},\n  \"replication_id\": \"{{replicationId}}\",\n  \"cancel\":true\n}"
						},
						"url": {
							"raw": "{{adminurl}}/_replicate",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"_replicate"
							]
						},
						"description": "This request starts or cancels a database replication operation.\n\nYou can cancel continuous replications by adding the cancel field to the JSON request object and setting the value to true. Note that the structure of the request must be identical to the original for the cancellation request to be honoured. For example, if you requested continuous replication, the cancellation request must also contain the continuous field.\n"
					},
					"response": [
						{
							"id": "c63a54d9-5e22-48e5-9eca-0028bcb96b07",
							"name": "404 not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"{{localdb}}\",\n  \"target\": \"{{remotedb}}\",\n  \"continuous\": true,\n  \"query_params\": {},\n  \"replication_id\": \"{{replicationId}}\",\n  \"cancel\":true\n}"
								},
								"url": {
									"raw": "{{adminurl}}/_replicate",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_replicate"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "83",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 19:51:35 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"No replication found matching specified parameters\"}"
						},
						{
							"id": "30c5cc96-cffc-4cb5-9476-3e594b274d1a",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": \"{{localdb}}\",\n  \"target\": \"{{remotedb}}\",\n  \"continuous\": true,\n  \"query_params\": {},\n  \"replication_id\": \"{{replicationId}}\",\n  \"cancel\":true\n}"
								},
								"url": {
									"raw": "{{adminurl}}/_replicate",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"_replicate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "237",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 19:52:44 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"type\":\"replication\",\"replication_id\":\"repl101\",\"continuous\":true,\"source\":\"http://:4985/local_demodb\",\"target\":\"http://localhost:4984/demodb\",\"docs_read\":0,\"docs_written\":0,\"doc_write_failures\":0,\"start_last_seq\":0,\"end_last_seq\":null}"
						}
					]
				}
			]
		},
		{
			"name": "replication",
			"description": "Folder for {db}",
			"item": [
				{
					"name": "Changes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1ee5dc7-0293-4b4c-bcd6-a675fd625b7c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_changes?limit={{limit}}&style=main_only&active_only=false&include_docs=false&filter={{filter}}&channels={{channels}}&doc_ids=[{{docid}}]&feed=normal&since={{since}}&heartbeat=0&timeout=300000",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_changes"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}",
									"equals": true
								},
								{
									"key": "style",
									"value": "main_only",
									"equals": true
								},
								{
									"key": "active_only",
									"value": "false",
									"equals": true
								},
								{
									"key": "include_docs",
									"value": "false",
									"equals": true
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"equals": true
								},
								{
									"key": "channels",
									"value": "{{channels}}",
									"equals": true
								},
								{
									"key": "doc_ids",
									"value": "[{{docid}}]",
									"equals": true
								},
								{
									"key": "feed",
									"value": "normal",
									"equals": true
								},
								{
									"key": "since",
									"value": "{{since}}",
									"equals": true
								},
								{
									"key": "heartbeat",
									"value": "0",
									"equals": true
								},
								{
									"key": "timeout",
									"value": "300000",
									"equals": true
								}
							]
						},
						"description": "This request retrieves a sorted list of changes made to documents in the database, in time order of application. Each document appears at most once, ordered by its most recent change, regardless of how many times it's been changed.\nThis request can be used to listen for update and modifications to the database for post processing or synchronization. A continuously connected changes feed is a reasonable approach for generating a real-time log for most applications.\n"
					},
					"response": [
						{
							"id": "84760eba-09e7-444c-bf40-733ff1f127af",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_changes?limit={{limit}}&style=main_only&active_only=false&include_docs=false&filter={{filter}}&channels={{channels}}&doc_ids=[{{docid}}]&feed=normal&since={{since}}&heartbeat=0&timeout=300000",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_changes"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limit}}",
											"equals": true
										},
										{
											"key": "style",
											"value": "main_only",
											"equals": true
										},
										{
											"key": "active_only",
											"value": "false",
											"equals": true
										},
										{
											"key": "include_docs",
											"value": "false",
											"equals": true
										},
										{
											"key": "filter",
											"value": "{{filter}}",
											"equals": true
										},
										{
											"key": "channels",
											"value": "{{channels}}",
											"equals": true
										},
										{
											"key": "doc_ids",
											"value": "[{{docid}}]",
											"equals": true
										},
										{
											"key": "feed",
											"value": "normal",
											"equals": true
										},
										{
											"key": "since",
											"value": "{{since}}",
											"equals": true
										},
										{
											"key": "heartbeat",
											"value": "0",
											"equals": true
										},
										{
											"key": "timeout",
											"value": "300000",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "private, max-age=0, no-cache, no-store",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "565",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:19:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"results\":[\r\n{\"seq\":1,\"id\":\"_user/tester\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":2,\"id\":\"_user/admin\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":3,\"id\":\"_user/demo\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":9,\"id\":\"0b5b3564521d370dffa7d03996327a36\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":10,\"id\":\"1ea3728e4571967ba5841619ebcb7f98\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":11,\"id\":\"385aa0e987308114dcf1c9a85cadf5ca\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":12,\"id\":\"5a0ac4bbba6ae04abccd389e64a42281\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":13,\"id\":\"b48054057dc5b167e6ed6c4cc5e4b520\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":19,\"id\":\"db3627e655768550cc024933def3f265\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":20,\"id\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":21,\"id\":\"ee83120452394e09af05169b43c0a493\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":22,\"id\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":23,\"id\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":24,\"id\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":26,\"id\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"changes\":[{\"rev\":\"2-651a607cfc50800c9a4caff4e23a1a9a\"}]}\n,{\"seq\":29,\"id\":\"05bfcc578d2746d574a7b3565d37a765\",\"changes\":[{\"rev\":\"3-7fc6b14d68aaad1a6842c238cbd253d8\"}]}\n,{\"seq\":32,\"id\":\"testdoc\",\"changes\":[{\"rev\":\"8-c7bde27dc8f25b59eddf1687254859e4\"}]}\n],\n\"last_seq\":\"32\"}\n"
						}
					]
				},
				{
					"name": "Changes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "549b38c4-771c-4991-b7ef-3791f0355661",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"limit\": 0,\n  \"style\": \"main_only\",\n  \"active_only\": false,\n  \"include_docs\": false,\n  \"filter\": \"{{filter}}\",\n  \"channels\": \"{{channels}}\",\n  \"doc_ids\": [\n    \"{{docid}}\"\n  ],\n  \"feed\": \"normal\",\n  \"since\": 0,\n  \"heartbeat\": 0,\n  \"timeout\": 300000\n}\n\n"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_changes",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_changes"
							]
						},
						"description": "Same as the GET /_changes request except the parameters are in the JSON body.\n"
					},
					"response": [
						{
							"id": "4a64e62f-95ee-4d9b-b37f-56f6a82efd5f",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"limit\": 0,\n  \"style\": \"main_only\",\n  \"active_only\": false,\n  \"include_docs\": false,\n  \"filter\": \"{{filter}}\",\n  \"channels\": \"{{channels}}\",\n  \"doc_ids\": [\n    \"{{docid}}\"\n  ],\n  \"feed\": \"normal\",\n  \"since\": 0,\n  \"heartbeat\": 0,\n  \"timeout\": 300000\n}\n\n"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_changes",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_changes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "private, max-age=0, no-cache, no-store",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "565",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:24:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"results\":[\r\n{\"seq\":1,\"id\":\"_user/tester\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":2,\"id\":\"_user/admin\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":3,\"id\":\"_user/demo\",\"changes\":[{\"rev\":\"\"}]}\n,{\"seq\":9,\"id\":\"0b5b3564521d370dffa7d03996327a36\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":10,\"id\":\"1ea3728e4571967ba5841619ebcb7f98\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":11,\"id\":\"385aa0e987308114dcf1c9a85cadf5ca\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":12,\"id\":\"5a0ac4bbba6ae04abccd389e64a42281\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":13,\"id\":\"b48054057dc5b167e6ed6c4cc5e4b520\",\"deleted\":true,\"changes\":[{\"rev\":\"2-88e54e36ba894f7f6dc3ef32e2a0a05a\"}]}\n,{\"seq\":19,\"id\":\"db3627e655768550cc024933def3f265\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":20,\"id\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":21,\"id\":\"ee83120452394e09af05169b43c0a493\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":22,\"id\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":23,\"id\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":24,\"id\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"changes\":[{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]}\n,{\"seq\":26,\"id\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"changes\":[{\"rev\":\"2-651a607cfc50800c9a4caff4e23a1a9a\"}]}\n,{\"seq\":29,\"id\":\"05bfcc578d2746d574a7b3565d37a765\",\"changes\":[{\"rev\":\"3-7fc6b14d68aaad1a6842c238cbd253d8\"}]}\n,{\"seq\":32,\"id\":\"testdoc\",\"changes\":[{\"rev\":\"8-c7bde27dc8f25b59eddf1687254859e4\"}]}\n],\n\"last_seq\":\"32\"}\n"
						}
					]
				}
			]
		},
		{
			"name": "database",
			"description": "Folder for {{db}}",
			"item": [
				{
					"name": "Database info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "122f5b05-78c3-42b4-918b-3019bc893481",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Database Info Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var dbName = jsonData[\"db_name\"];",
									"    var currDB = pm.environment.get(\"db\");",
									"    pm.expect(dbName).to.eql(currDB);",
									"    var lastSeq = jsonData[\"update_seq\"];",
									"    pm.environment.set(\"update_seq\",lastSeq);",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								""
							]
						},
						"description": "This request retrieves information about the database.\n"
					},
					"response": [
						{
							"id": "5ab94d70-9f08-491d-9996-b592f752cf3f",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "180",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:04:36 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"committed_update_seq\":35,\"compact_running\":false,\"db_name\":\"demodb\",\"disk_format_version\":0,\"instance_start_time\":1516923400395762,\"purge_seq\":0,\"state\":\"Online\",\"update_seq\":35}"
						}
					]
				},
				{
					"name": "Compact the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c3f4fb1-8802-4fab-b1ba-2b9554f7ca4b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_compact",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_compact"
							]
						},
						"description": "This request deletes obsolete backup revisions. When a new revision is created, the body of the previous non-conflicting revision is temporarily stored in a separate document. These backup documents are set to expire after 5 minutes. Calling the _compact endpoint will remove these backup documents immediately. For tombstone management operations, refer to the revs_limit configuration and the /{db}/_purge endpoint.\n"
					},
					"response": [
						{
							"id": "1901f450-a507-43ab-81d4-6532cbf5a49b",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_compact",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_compact"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "10",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:10:55 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"revs\":0}"
						}
					]
				},
				{
					"name": "Create database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3462c27-c178-4225-a159-f9881b873493",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"server\": \"walrus:\",\n      \"bucket\": \"{{walrusdb}}\",\n      \"users\": { \"GUEST\": { \"disabled\": true, \"admin_channels\": [\"*\"] } }\n      }"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								""
							]
						},
						"description": "This request creates a database.\nYou can optionally pass the database config as the JSON body. For example:\n\n  {\n    \"server\":\"http://localhost:8091\",\n    \"bucket\": \"todo_app\",\n    \"users\": {\n      \"john\": {\"password\": \"pass\", \"admin_channels\": [\"*\"]}\n    }\n  }\n\nNote that if you pass the entire config file it won't work, it must be the database portion only (the database name is specified in the URL path). If the parameters passed are invalid it will create a walrus-backed database with all values set to default.\n"
					},
					"response": [
						{
							"id": "3c17f1ba-9c56-4c10-b67d-f7ae87238dd2",
							"name": "412",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"server\": \"walrus:\",\n      \"bucket\": \"{{walrusdb}}\",\n      \"users\": { \"GUEST\": { \"disabled\": true, \"admin_channels\": [\"*\"] } }\n      }"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										""
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "83",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:10:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Precondition Failed\",\"reason\":\"Duplicate database name \\\"walrustestdb\\\"\"}"
						},
						{
							"id": "22601373-87d8-4a6f-ba9d-b6f272c7df01",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"server\": \"walrus:\",\n      \"bucket\": \"{{walrusdb}}\",\n      \"users\": { \"GUEST\": { \"disabled\": true, \"admin_channels\": [\"*\"] } }\n      }"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:08:17 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Database configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17721c1f-f7c1-4c98-b7e0-554be2ede64c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Database Info Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var dbName = jsonData[\"name\"];",
									"    var currDB = pm.environment.get(\"walrusdb\");",
									"    pm.expect(dbName).to.eql(currDB);",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_config",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_config"
							]
						},
						"description": "Returns the Sync Gateway configuration of the database specified in the URL. This is a good method to check if a particular key was set correctly on the config file.\n"
					},
					"response": [
						{
							"id": "bfa8b1e8-f4b8-4280-b956-5a6e5bfe5e90",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_config",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "500",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:08:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"server\":\"http://cb-server-demo:8091\",\"pool\":\"default\",\"bucket\":\"demodb\",\"username\":\"admin\",\"password\":\"password\",\"name\":\"demodb\",\"users\":{\"admin\":{\"name\":\"demo\",\"admin_channels\":[\"*\"],\"all_channels\":null,\"password\":\"password\"},\"demo\":{\"name\":\"demo\",\"all_channels\":null,\"password\":\"password\"},\"tester\":{\"name\":\"demo\",\"all_channels\":null,\"password\":\"password\"}},\"import_docs\":\"continuous\",\"unsupported\":{\"user_views\":{},\"replicator_2\":true,\"oidc_test_provider\":{}},\"enable_shared_bucket_access\":true}"
						},
						{
							"id": "7a8f0e0c-8eb9-4ae1-9b6c-4a87eab96a6a",
							"name": "503",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_config",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_config"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:13:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Service Unavailable\",\"reason\":\"DB is currently under maintenance\"}"
						}
					]
				},
				{
					"name": "This request takes the specified database offline.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3b8896d-5570-4644-b9b6-929c9eb7cbe4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_offline",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_offline"
							]
						},
						"description": "Taking a database offline:\n\n- Cleanly closes all active _changes feeds for this database.\n- Rejects all access to the database through the Public REST API (503 Service Unavailable).\n- Rejects most Admin API requests (503 Service Unavailable). Sync Gateway processes a small set of Admin API \nrequests.\n- Does not take the backing Couchbase Server bucket offline. The bucket remains available and Sync Gateway \nkeeps its connection to the bucket.\n\nFor more information about taking a database offline and bringing it back online, see Taking databases offline and bringing them online.\n"
					},
					"response": [
						{
							"id": "d5c52c2e-7e56-479d-9699-322cc8a37673",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_offline",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_offline"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:12:53 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2e6075c2-924d-4528-897d-438fabc19a90",
							"name": "404",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_offline",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_offline"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "66",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 04:15:02 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"no such database \\\"walrustestdb\\\"\"}"
						},
						{
							"id": "2668eb37-336e-47ed-83c9-b9b0d93fd128",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_offline",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_offline"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 04:15:19 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update database configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "69c4f562-adaf-461f-a240-e82da94eacc2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"server\": \"walrus:\",\n    \"pool\": \"default\",\n    \"bucket\": \"{{walrusdb}}\",\n    \"name\": \"{{walrusdb}}\",\n    \"users\": {\n        \"GUEST\": {\n            \"name\": \"\",\n            \"admin_channels\": [\n                \"*\"\n            ],\n            \"all_channels\": null,\n            \"disabled\": false\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_config",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_config"
							]
						},
						"description": "This request updates the configuration for the database specified in the URL."
					},
					"response": [
						{
							"id": "d3eae337-848a-426d-905f-d90cbe02f858",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"server\": \"walrus:\",\n      \"bucket\": \"{{walrusdb}}\",\n      \"users\": { \"GUEST\": { \"disabled\": false, \"admin_channels\": [\"*\"] } }\n      }"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_config",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_config"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:15:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reprocess all documents by the database in the sync function.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_resync",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_resync"
							]
						},
						"description": "This request causes all documents to be reprocessed by the database sync function. The _resync operation should be called if the sync function for a databse has been modified in such a way that the channel or access mappings for any existing document would change as a result.\n\nWhen the sync function is invoked by _resync, the requireUser() and requireRole() calls will always return 'true'.\n\nA _resync operation on a database that is not in the offline state will be rejected (503 Service Unavailable).\n\nA _resync operation will block until all documents in the database have been processed.\n"
					},
					"response": [
						{
							"id": "e66d3cfc-f519-4f1f-8570-408d5abf207b",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_resync",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_resync"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "13",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:17:18 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"changes\":0}"
						},
						{
							"id": "68572065-afa6-497e-86f2-9cef57609a56",
							"name": "503",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_resync",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_resync"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "92",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:16:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Service Unavailable\",\"reason\":\"Database must be _offline before calling /_resync\"}"
						}
					]
				},
				{
					"name": "Bring a database online.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3eba60b5-358e-4e9c-9ff7-f654a6469f21",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"delay\": 0\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_online",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_online"
							]
						},
						"description": "This request brings the specified database online, either immediately or after a specified delay.\n\nBringing a database online:\n\n- Closes the datbases connection to the backing Couchbase Server bucket.\n- Reloads the databse configuration, and connects to the backing Cocuhbase Server bucket.\n- Re-establishes access to the database from the Public REST API.\n- Accepts all Admin API reqieste.\n\nFor more information about taking a database offline and bringing it back online, see Taking databases \noffline and bringing them online.\n"
					},
					"response": [
						{
							"id": "a8147125-f5cc-4219-9941-a9a0c0a43d07",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"delay\": 0\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_online",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_online"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:15:34 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "users",
			"description": null,
			"item": [
				{
					"name": "Creates a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7df12c38-8e0a-40e7-8470-9d13d6d03189",
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"channelid\", \"_{{name}}\");"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "be381ab8-b83a-4e89-bb49-c2d4a1fa8e9c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"email\": \"{{email}}\",\n  \"disabled\": false\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_user/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_user",
								""
							]
						},
						"description": "This request creates a new user in the specified database."
					},
					"response": [
						{
							"id": "c750bad1-320e-4979-9e3d-e96043c25457",
							"name": "409",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"email\": \"{{email}}\",\n  \"disabled\": false\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										""
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "46",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 00:08:29 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"conflict\",\"reason\":\"Already exists\"}"
						},
						{
							"id": "9814957d-fe8f-490a-94fc-6e7c634b59c4",
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"email\": \"{{email}}\",\n  \"disabled\": false\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 19:17:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e0bdd5b6-f495-45e6-b839-0a8bd8d4a62a",
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"email\": \"{{email}}\",\n  \"disabled\": false\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_user/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_user",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:28:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "966f33a9-6ee8-4497-bfdf-b08e859b21c7",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Get users Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    ",
									"    var users = [];",
									"    var hasVal = false;",
									"    jsonData.forEach(function (user) {",
									"        users.push(user);",
									"     });",
									"      ",
									"    pm.expect(pm.environment.get(\"user\")).to.be.oneOf(users);",
									"",
									"    ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_user/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_user",
								""
							]
						},
						"description": "This request returns all the users in the specified database."
					},
					"response": [
						{
							"id": "e33dc61b-18ff-4590-be53-c82f26964d41",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:30:55 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "[\"admin\",\"demo\",\"tester\"]"
						}
					]
				},
				{
					"name": "Creates or updates a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e7112d2-63ae-4033-9b9b-2819bd3b7496",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"admin_roles\":[\n    \"owner\"\n    ],\n  \"email\": \"{{email}}\",\n  \"disabled\": true\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_user/{{user}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_user",
								"{{user}}"
							]
						},
						"description": "This request creates or updates a user in the specified database."
					},
					"response": [
						{
							"id": "6160ea5e-596d-4030-a113-7e665d1d463d",
							"name": "200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{user}}\",\n  \"password\": \"{{password}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ],\n  \"admin_roles\":[\n    \"owner\"\n    ],\n  \"email\": \"{{email}}\",\n  \"disabled\": true\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{user}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{user}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:19:16 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieves a specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7e9a0b7-916b-42cb-a636-6607cd9f4166",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Get user Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"      ",
									"    pm.expect(pm.environment.get(\"user\")).to.be.eql(jsonData[\"name\"]);",
									" ",
									"",
									"    ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_user/{{user}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_user",
								"{{user}}"
							]
						},
						"description": "This request returns information about the specified user."
					},
					"response": [
						{
							"id": "f11ecb60-d24a-426c-8a67-7e2f2d537caa",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{user}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{user}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "125",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:19:42 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"name\":\"demouser\",\"admin_channels\":[\"_admin\"],\"all_channels\":[\"!\",\"_admin\"],\"email\":\"demouser@example.com\",\"disabled\":true,\"admin_roles\":[\"owner\"],\"roles\":[\"owner\"]}"
						}
					]
				},
				{
					"name": "Creates or updates a role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "559547d9-a961-49b7-bb88-b588c29bf970",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{role}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ]\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_role",
								"{{role}}"
							]
						},
						"description": "This request creates or updates a role in the specified database."
					},
					"response": [
						{
							"id": "90c563cf-886c-40b9-8b3b-b515e3ac63de",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{role}}\",\n  \"admin_channels\": [\n    \"{{channelid}}\"\n  ]\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_role",
										"{{role}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:22:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0560d90b-7248-437b-aa49-be844b386867",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Get roles Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    ",
									"    var roles = [];",
									"    var hasVal = false;",
									"    jsonData.forEach(function (role) {",
									"        roles.push(role);",
									"     });",
									"      ",
									"    pm.expect(pm.environment.get(\"role\")).to.be.oneOf(roles);",
									"",
									"    ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_role",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_role"
							]
						},
						"description": "This request returns all the roles in the specified database."
					},
					"response": [
						{
							"id": "fab38206-56fe-4f54-b90b-4b4b040a3d7a",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_role",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "33",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:23:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "[\"owner\"]"
						}
					]
				},
				{
					"name": "Get role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f72e884-7ace-440c-bab9-34b7321bf0bd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get role Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"  ",
									"      ",
									"    pm.expect(pm.environment.get(\"role\")).to.be.eql(jsonData[\"name\"]);",
									"",
									"    ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_role",
								"{{role}}"
							]
						},
						"description": "Request a specific role by name."
					},
					"response": [
						{
							"id": "86948503-95fb-49b8-affd-7234921aa8f9",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_role",
										"{{role}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "77",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:25:08 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"name\":\"owner\",\"admin_channels\":[\"_admin\"],\"all_channels\":[\"!\",\"_admin\"]}"
						},
						{
							"id": "83a491b9-a3b0-4edc-8b8a-9cbcfbd36aae",
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_role",
										"{{role}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:30:54 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Deletes the role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40066e54-4e26-4e70-8768-fb50ed107387",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_role",
								"{{role}}"
							]
						},
						"description": "This request deletes the role with the specified name in the specified database."
					},
					"response": [
						{
							"id": "da184a1c-a140-4d54-a0d2-5ec57881473e",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_role/{{role}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_role",
										"{{role}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:30:39 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "92f05200-6b19-4bf2-9489-cbf75ace551f",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_role/{{user}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_role",
										"{{user}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:29:20 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Deletes a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cf696a3-9177-4976-a23e-ac33502bff3c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/_user/{{user}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								"_user",
								"{{user}}"
							]
						},
						"description": "This request deletes the user with the specified name in the specified database."
					},
					"response": [
						{
							"id": "bc4a5bde-02fe-43ae-8144-b1cfa2c7feb0",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/_user/{{user}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										"_user",
										"{{user}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:31:45 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "document",
			"description": null,
			"item": [
				{
					"name": "Create document(POST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "544ccee7-14bf-4a52-9280-b58a528f0b76",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Create Doc Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"  ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"value\":\"{{body}}\"}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								""
							]
						},
						"description": "This request creates a new document in the specified database. You can either specify the document ID by including the _id in the request message body (the value must be a string), or let the software generate an ID.\n"
					},
					"response": [
						{
							"id": "526a7d51-2da5-4585-9efd-5b89bf772aee",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"value\":\"{{body}}\"}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "94",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:44:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Etag",
									"value": "\"1-fc2cf22c5e5007bd966869ebfe9e276a\"",
									"name": "Etag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Location",
									"value": "70990ab0d9a3bb0fec069d284363efe1",
									"name": "Location",
									"description": "Used in redirection, or when a new resource has been created."
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"70990ab0d9a3bb0fec069d284363efe1\",\"ok\":true,\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}"
						}
					]
				},
				{
					"name": "Create document(PUT)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4882e262-e052-4b8a-b900-6c67dd37ecb0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Create Doc Success Test\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    var docId = jsonData[\"id\"];",
									"    pm.expect(docId).to.eql(pm.environment.get(\"docid\"));",
									"    var revId = jsonData[\"rev\"];",
									"    pm.environment.set(\"rev\",revId);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"value\":\"{{body}}\"}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/{{docid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"{{docid}}"
							]
						},
						"description": "This request creates a new document or creates a new revision of an existing document. It enables you to specify the identifier for a new document rather than letting the software create an identifier. If you want to create a new document and let the software create an identifier, use the POST /db request.\nIf the document specified by doc does not exist, a new document is created and assigned the identifier specified in doc. If the document already exists, the document is updated with the JSON document in the message body and given a new revision.\n"
					},
					"response": [
						{
							"id": "6a498014-c7fe-4a2a-a502-4a7d88d3bd76",
							"name": "200",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"value\":\"{{body}}\"}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{docid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{docid}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "69",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:45:52 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Etag",
									"value": "\"8-c7bde27dc8f25b59eddf1687254859e4\"",
									"name": "Etag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"testdoc\",\"ok\":true,\"rev\":\"8-c7bde27dc8f25b59eddf1687254859e4\"}"
						},
						{
							"id": "501053a8-feb0-4817-b87d-75452a9419dd",
							"name": "409 conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"value\":\"{{body}}\"}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{docid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{docid}}"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "47",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 18:50:55 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"conflict\",\"reason\":\"Document exists\"}"
						}
					]
				},
				{
					"name": "Update document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2660753-a6bb-4c9a-ad64-63c98fe23ea7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Create Doc Success Test\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    var docId = jsonData[\"id\"];",
									"    pm.expect(docId).to.eql(pm.environment.get(\"docid\"));",
									"    var revId = jsonData[\"rev\"];",
									"    pm.environment.set(\"rev\",revId);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\":\"{{updatedbody}}\"\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/{{docid}}?new_edits={{newedits}}&rev={{rev}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "new_edits",
									"value": "{{newedits}}",
									"equals": true
								},
								{
									"key": "rev",
									"value": "{{rev}}",
									"equals": true
								}
							]
						},
						"description": "This request creates a new document or creates a new revision of an existing document. It enables you to specify the identifier for a new document rather than letting the software create an identifier. If you want to create a new document and let the software create an identifier, use the POST /db request.\nIf the document specified by doc does not exist, a new document is created and assigned the identifier specified in doc. If the document already exists, the document is updated with the JSON document in the message body and given a new revision.\n"
					},
					"response": [
						{
							"id": "3bd150ae-67f1-4c64-a7af-296028aa8dae",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"value\":\"{{updatedbody}}\"\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{docid}}?new_edits={{newedits}}&rev={{rev}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{docid}}"
									],
									"query": [
										{
											"key": "new_edits",
											"value": "{{newedits}}",
											"equals": true
										},
										{
											"key": "rev",
											"value": "{{rev}}",
											"equals": true
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "69",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 19:07:54 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Etag",
									"value": "\"4-03b2117982b33ba9476bfda1f2a8881b\"",
									"name": "Etag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"testdoc\",\"ok\":true,\"rev\":\"4-03b2117982b33ba9476bfda1f2a8881b\"}"
						}
					]
				},
				{
					"name": "Get document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa4a3240-0221-4ded-a4eb-453a190957e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Doc Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var docId = jsonData[\"_id\"];",
									"    var currDoc = pm.environment.get(\"docid\");",
									"    pm.expect(docId).to.eql(currDoc);",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/{{docid}}?attachments=false&atts_since={{atts_since}}&open_revs={{open_revs}}&revs=false&show_exp=false",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "attachments",
									"value": "false",
									"equals": true
								},
								{
									"key": "atts_since",
									"value": "{{atts_since}}",
									"equals": true
								},
								{
									"key": "open_revs",
									"value": "{{open_revs}}",
									"equals": true
								},
								{
									"key": "revs",
									"value": "false",
									"equals": true
								},
								{
									"key": "show_exp",
									"value": "false",
									"equals": true
								}
							]
						},
						"description": "This request retrieves a document from a database."
					},
					"response": [
						{
							"id": "a346a687-9a39-4b64-ab65-c1d2b4516dda",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{docid}}?attachments=false&atts_since={{atts_since}}&open_revs={{open_revs}}&revs=false&show_exp=false",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{docid}}"
									],
									"query": [
										{
											"key": "attachments",
											"value": "false",
											"equals": true
										},
										{
											"key": "atts_since",
											"value": "{{atts_since}}",
											"equals": true
										},
										{
											"key": "open_revs",
											"value": "{{open_revs}}",
											"equals": true
										},
										{
											"key": "revs",
											"value": "false",
											"equals": true
										},
										{
											"key": "show_exp",
											"value": "false",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "78",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 19:01:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Etag",
									"value": "\"3-faa0e0235486e0b6add78cc9e0f89e08\"",
									"name": "Etag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"_id\":\"testdoc\",\"_rev\":\"3-faa0e0235486e0b6add78cc9e0f89e08\",\"value\":\"foobar\"}"
						},
						{
							"id": "33c0eb4f-98e1-4d7f-a7b8-8debe0a774a0",
							"name": "404 not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{docid}}?attachments=false&atts_since={{atts_since}}&open_revs={{open_revs}}&revs=false&show_exp=false",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{docid}}"
									],
									"query": [
										{
											"key": "attachments",
											"value": "false",
											"equals": true
										},
										{
											"key": "atts_since",
											"value": "{{atts_since}}",
											"equals": true
										},
										{
											"key": "open_revs",
											"value": "{{open_revs}}",
											"equals": true
										},
										{
											"key": "revs",
											"value": "false",
											"equals": true
										},
										{
											"key": "show_exp",
											"value": "false",
											"equals": true
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 18:55:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Document with metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6208a30-799f-41ad-a91f-432732a7f195",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Doc Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var data = jsonData[\"_sync\"];",
									"    var currRev= pm.environment.get(\"rev\");",
									"    pm.expect(data[\"rev\"]).to.eql(currRev);",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_raw/{{docid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_raw",
								"{{docid}}"
							]
						},
						"description": "Returns the document with the metadata."
					},
					"response": [
						{
							"id": "c5534367-28ff-4b98-9557-c418ec3cdc01",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_raw/{{doc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_raw",
										"{{doc}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "615",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:21:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"_sync\":{\"rev\":\"8-c7bde27dc8f25b59eddf1687254859e4\",\"sequence\":32,\"recent_sequences\":[14,15,16,17,18,30,31,32],\"history\":{\"revs\":[\"4-03b2117982b33ba9476bfda1f2a8881b\",\"2-85a0310f52db4a60f506d461f4e81274\",\"6-3fd41affdfd92e2fb8e9ea6abbfe90bd\",\"1-179900bc134a6eac295515793bf80080\",\"7-68aeb4230dea31f5496db20afa2a12fc\",\"8-c7bde27dc8f25b59eddf1687254859e4\",\"3-faa0e0235486e0b6add78cc9e0f89e08\",\"5-373546b6ca3ec862069d1ba932507867\"],\"parents\":[6,3,7,-1,2,4,1,0],\"deleted\":[1,4],\"channels\":[null,null,null,null,null,null,null,null]},\"cas\":\"0x0000791f0e770d15\",\"time_saved\":\"2018-01-26T20:45:52.032798088Z\"},\"value\":\"foo\"}"
						}
					]
				},
				{
					"name": "All docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b97b958-ab27-4c23-91c6-c2d9d002fec9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Doc Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"  ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_all_docs?access=false&channels=false&include_docs=false&revs=false&update_seq=false&limit={{limit}}&keys={{keys}}&startkey={{startkey}}&endkey={{endkey}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_all_docs"
							],
							"query": [
								{
									"key": "access",
									"value": "false",
									"equals": true
								},
								{
									"key": "channels",
									"value": "false",
									"equals": true
								},
								{
									"key": "include_docs",
									"value": "false",
									"equals": true
								},
								{
									"key": "revs",
									"value": "false",
									"equals": true
								},
								{
									"key": "update_seq",
									"value": "false",
									"equals": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"equals": true
								},
								{
									"key": "keys",
									"value": "{{keys}}",
									"equals": true
								},
								{
									"key": "startkey",
									"value": "{{startkey}}",
									"equals": true
								},
								{
									"key": "endkey",
									"value": "{{endkey}}",
									"equals": true
								}
							]
						},
						"description": "This request returns a built-in view of all the documents in the database.\n"
					},
					"response": [
						{
							"id": "8e41548e-44d5-4069-a6d7-5f6665ef12c1",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_all_docs?access=false&channels=false&include_docs=false&revs=false&update_seq=false&limit={{limit}}&keys={{keys}}&startkey={{startkey}}&endkey={{endkey}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_all_docs"
									],
									"query": [
										{
											"key": "access",
											"value": "false",
											"equals": true
										},
										{
											"key": "channels",
											"value": "false",
											"equals": true
										},
										{
											"key": "include_docs",
											"value": "false",
											"equals": true
										},
										{
											"key": "revs",
											"value": "false",
											"equals": true
										},
										{
											"key": "update_seq",
											"value": "false",
											"equals": true
										},
										{
											"key": "limit",
											"value": "{{limit}}",
											"equals": true
										},
										{
											"key": "keys",
											"value": "{{keys}}",
											"equals": true
										},
										{
											"key": "startkey",
											"value": "{{startkey}}",
											"equals": true
										},
										{
											"key": "endkey",
											"value": "{{endkey}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "475",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:53:48 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"rows\":[\n{\"key\":\"05bfcc578d2746d574a7b3565d37a765\",\"id\":\"05bfcc578d2746d574a7b3565d37a765\",\"value\":{\"rev\":\"3-7fc6b14d68aaad1a6842c238cbd253d8\"}}\n,{\"key\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"id\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"value\":{\"rev\":\"2-651a607cfc50800c9a4caff4e23a1a9a\"}}\n,{\"key\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"id\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"id\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"70990ab0d9a3bb0fec069d284363efe1\",\"id\":\"70990ab0d9a3bb0fec069d284363efe1\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"77f1ed7f21763bde7809e13584512a3b\",\"id\":\"77f1ed7f21763bde7809e13584512a3b\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"8e724c26b2db621e7fefd1b1069dc2a5\",\"id\":\"8e724c26b2db621e7fefd1b1069dc2a5\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"id\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"db3627e655768550cc024933def3f265\",\"id\":\"db3627e655768550cc024933def3f265\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"id\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"ee83120452394e09af05169b43c0a493\",\"id\":\"ee83120452394e09af05169b43c0a493\",\"value\":{\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}}\n,{\"key\":\"testdoc\",\"id\":\"testdoc\",\"value\":{\"rev\":\"8-c7bde27dc8f25b59eddf1687254859e4\"}}\n],\n\"total_rows\":12,\"update_seq\":35}"
						}
					]
				},
				{
					"name": "Delete document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b372ee96-d836-4635-96b4-33cd264f94e6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[\"ok\"]).to.eql(true);",
									"  ",
									"    var docId = jsonData[\"id\"];",
									"    pm.expect(docId).to.eql(pm.environment.get(\"docid\"));",
									" ",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/{{docid}}?rev={{rev}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"{{docid}}"
							],
							"query": [
								{
									"key": "rev",
									"value": "{{rev}}",
									"equals": true
								}
							]
						},
						"description": "This request deletes a document from the database. When a document is deleted, the revision number is updated so the database can track the deletion in synchronized copies.\n"
					},
					"response": [
						{
							"id": "b1dc0147-a650-4499-835e-f93b92f4bf4e",
							"name": "409 conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{doc}}?rev={{rev}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{doc}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{rev}}",
											"equals": true
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "58",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 18:49:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"conflict\",\"reason\":\"Document revision conflict\"}"
						},
						{
							"id": "fa1e7df3-062a-470c-afc0-24b73e28a2b4",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/{{doc}}?rev={{rev}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"{{doc}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{rev}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "69",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 18:42:53 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"testdoc\",\"ok\":true,\"rev\":\"2-85a0310f52db4a60f506d461f4e81274\"}"
						}
					]
				},
				{
					"name": "Bulk docs Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7962400d-6850-4449-8adb-73ecf9563846",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Bulk Docs Create Success Test\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"   ",
									"    var docId = jsonData[0][\"id\"];",
									"    pm.environment.set(\"bulkdocid\",docId);",
									"    var revId = jsonData[0][\"rev\"];",
									"    pm.environment.set(\"bulkrev\",revId);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"docs\": [\n  \t{\n  \t\t\"value\":\"{{body}}\"\n  \t}\n  ],\n  \"new_edits\": {{newedits}}\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_bulk_docs",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_bulk_docs"
							]
						},
						"description": "This request enables you to add, update, or delete multiple documents to a database in a single request. To add new documents, you can either specify the ID (`_id`) or let the software create an ID. To update existing documents, you must provide the document ID, revision identifier (`_rev`), and new document values. To delete existing documents you must provide the document ID, revision identifier, and the deletion flag (`_deleted`).\n\nThe JSON returned by the `_bulk_docs` operation consists of an array of JSON structures, one for each document in the original submission. The returned JSON structure should be examined to ensure that all of the documents submitted in the original request were successfully added to the database.\n"
					},
					"response": [
						{
							"id": "462116c9-b8cf-4425-ba24-9a4091dd8a7d",
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"docs\": [\n  \t{\n  \t\t\"value\":\"{{body}}\"\n  \t}\n  ],\n  \"new_edits\": {{newedits}}\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_bulk_docs",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_bulk_docs"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "86",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:01:38 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"db3627e655768550cc024933def3f265\",\"rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\"}]"
						}
					]
				},
				{
					"name": "Bulk docs Edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1b77fc8-6f6e-4854-b729-67694b5ab484",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Bulk Docs Edit Success Test\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"   ",
									"    var docId = jsonData[0][\"id\"];",
									"    var currDoc = pm.environment.get(\"bulkdocid\");",
									"    pm.expect(docId).to.eql(currDoc);",
									"",
									"    var revId = jsonData[0][\"rev\"];",
									"    pm.environment.set(\"bulkrev\",revId);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"docs\": [\n  \t{\n  \t\t\"_rev\":\"{{bulkrev}}\",\n  \t\t\"_id\":\"{{bulkdocid}}\",\n  \t\t\"value\":\"{{bulkbody}}\"\n  \t}\n  ],\n  \"new_edits\": {{newedits}}\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_bulk_docs",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_bulk_docs"
							]
						},
						"description": "This request enables you to add, update, or delete multiple documents to a database in a single request. To add new documents, you can either specify the ID (`_id`) or let the software create an ID. To update existing documents, you must provide the document ID, revision identifier (`_rev`), and new document values. To delete existing documents you must provide the document ID, revision identifier, and the deletion flag (`_deleted`).\n\nThe JSON returned by the `_bulk_docs` operation consists of an array of JSON structures, one for each document in the original submission. The returned JSON structure should be examined to ensure that all of the documents submitted in the original request were successfully added to the database.\n"
					},
					"response": [
						{
							"id": "89d6a544-5601-4914-8066-ac26f0c33d0e",
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"docs\": [\n  \t{\n  \t\t\"_rev\":\"{{bulkrev}}\",\n  \t\t\"_id\":\"{{bulkdocid}}\",\n  \t\t\"value\":\"{{bulkbody}}\"\n  \t}\n  ],\n  \"new_edits\": {{newedits}}\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_bulk_docs",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_bulk_docs"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "86",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:36:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "[{\"id\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"rev\":\"2-651a607cfc50800c9a4caff4e23a1a9a\"}]"
						}
					]
				},
				{
					"name": "Bulk get",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5aebf0f7-0b91-4e3d-aefb-97c446feff12",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    // stack overflow soluition here .",
									"    //find the JSON in the multi part response. There isnt a built in mechanism",
									"    var p, q;",
									"    var foundFirstBracket = false;",
									"    var stackCount = 0;",
									"    for(var i = 0; i < responseBody.length; i++)",
									"    {",
									"        if(responseBody[i] === '{')",
									"        {",
									"            if(!foundFirstBracket) ",
									"            {",
									"                foundFirstBracket = true;",
									"                p = i;",
									"            }",
									"            stackCount++;",
									"        }",
									"        else if(responseBody[i] === '}') ",
									"        {",
									"            stackCount--;",
									"        }",
									"        if(stackCount === 0 && foundFirstBracket)",
									"        {",
									"            q = i;",
									"            break;",
									"        }",
									"    }",
									"    var jsonString = responseBody.substring(p, q+1);",
									"    var jsonData = JSON.parse(jsonString);",
									"    console.log(jsonData);",
									"",
									"    var docId = jsonData[\"_id\"];",
									"",
									"    var currDoc = pm.environment.get(\"bulkdocid\");",
									"    pm.expect(docId).to.eql(currDoc);",
									" ",
									"    var revId = jsonData[\"_rev\"];",
									"",
									"    var currRev = pm.environment.get(\"bulkrev\");",
									"    pm.expect(revId).to.eql(currRev);",
									" ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "//Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"docs\": [\n    {\n      \"id\": \"{{bulkdocid}}\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_bulk_get?revs=false&attachments=false",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_bulk_get"
							],
							"query": [
								{
									"key": "revs",
									"value": "false",
									"equals": true
								},
								{
									"key": "attachments",
									"value": "false",
									"equals": true
								}
							]
						},
						"description": "This request returns any number of documents, as individual bodies in a MIME multipart response.\nEach enclosed body contains one requested document. The bodies appear in the same order as in the request, but can also be identified by their X-Doc-ID and X-Rev-ID headers.\nA body for a document with no attachments will have content type application/json and contain the document itself.\nA body for a document that has attachments will be written as a nested multipart/related body. Its first part will be the document's JSON, and the subsequent parts will be the attachments (each identified by a Content-Disposition header giving its attachment name.)\n"
					},
					"response": [
						{
							"id": "cc3bf770-76f6-4d09-8a16-5ea01d9a6345",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "//Accept",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"docs\": [\n    {\n      \"id\": \"{{bulkdocid}}\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_bulk_get?revs=false&attachments=false",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_bulk_get"
									],
									"query": [
										{
											"key": "revs",
											"value": "false",
											"equals": true
										},
										{
											"key": "attachments",
											"value": "false",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "raw",
							"header": [
								{
									"key": "Content-Length",
									"value": "266",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "multipart/mixed; boundary=\"d112ec5b3c7e8a72397a81cead74fdd26c3f95dd390b33766ccf3d6397c2\"",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:17:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "--d112ec5b3c7e8a72397a81cead74fdd26c3f95dd390b33766ccf3d6397c2\r\nContent-Type: application/json\r\n\r\n{\"_id\":\"31fb4b79987df63477bdd6dbdc20dee0\",\"_rev\":\"1-fc2cf22c5e5007bd966869ebfe9e276a\",\"value\":\"foo\"}\r\n--d112ec5b3c7e8a72397a81cead74fdd26c3f95dd390b33766ccf3d6397c2--\r\n"
						}
					]
				},
				{
					"name": "Create a local document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed53e875-5ad1-46ca-b289-16149b7b7ee3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Create Local Doc Success Test\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    var docId = jsonData[\"id\"];",
									"    pm.expect(docId).to.eql(\"_local/\"+pm.environment.get(\"localdocid\"));",
									"    var revId = jsonData[\"rev\"];",
									"    pm.environment.set(\"localrev\",revId);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"value\":\"{{localbody}}\"}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_local",
								"{{localdocid}}"
							]
						},
						"description": "This request creates or updates a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by the client's replicator, as a place to store replication checkpoint data.\n"
					},
					"response": [
						{
							"id": "6f92fbbf-b85e-479e-952c-f7c8daef9041",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"value\":\"{{localbody}}\"}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{local_doc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{local_doc}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "52",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:44:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"id\":\"_local/admin_localdoc\",\"ok\":true,\"rev\":\"0-1\"}"
						},
						{
							"id": "fcd3d733-61de-45ce-bacb-55596ac8206a",
							"name": "409",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"value\":\"{{localbody}}\"}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{localdocid}}"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "56",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:02:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"conflict\",\"reason\":\"Document update conflict\"}"
						}
					]
				},
				{
					"name": "Get local doc",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d81d3d2c-2939-4255-9f84-82c32e3071c5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Get Doc Success Test\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    var docId = jsonData[\"_id\"];",
									"    var currDoc = pm.environment.get(\"localdocid\");",
									"    pm.expect(docId).to.eql(\"_local/\"+currDoc);",
									" ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_local",
								"{{localdocid}}"
							]
						},
						"description": "This request retrieves a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.\n"
					},
					"response": [
						{
							"id": "2a03050b-2452-4ba3-a89e-1923a72345ee",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{localdocid}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "71",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:56:12 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"_id\":\"_local/admin_localdoc\",\"_rev\":\"0-1\",\"value\":\"helloworld again\"}"
						},
						{
							"id": "1c763afa-ed6a-46fa-bc12-eb51af45ffe3",
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{localdocid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:01:42 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Delete a local document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "420d29c5-2bbd-4589-8aee-169f355cc3e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}?rev={{localrev}}&batch={{batch}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_local",
								"{{localdocid}}"
							],
							"query": [
								{
									"key": "rev",
									"value": "{{localrev}}",
									"equals": true
								},
								{
									"key": "batch",
									"value": "{{batch}}",
									"equals": true
								}
							]
						},
						"description": "This request deletes a local document. Local document IDs begin with _local/. Local documents are not replicated or indexed, don't support attachments, and don't save revision histories. In practice they are almost only used by Couchbase Lite's replicator, as a place to store replication checkpoint data.\n"
					},
					"response": [
						{
							"id": "46d89d9e-3b51-43ac-bfbc-ec4f344b395f",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{local_doc}}?rev={{localrev}}&batch={{batch}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{local_doc}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{localrev}}",
											"equals": true
										},
										{
											"key": "batch",
											"value": "{{batch}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:51:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b2dc2e5f-0633-480f-85e6-24a563131132",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}?rev={{localrev}}&batch={{batch}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{localdocid}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{localrev}}",
											"equals": true
										},
										{
											"key": "batch",
											"value": "{{batch}}",
											"equals": true
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "64",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 03:08:29 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"No previous revision to replace\"}"
						},
						{
							"id": "68d2c0ba-523d-452e-95f5-3324c1451ccd",
							"name": "409",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{local_doc}}?rev={{rev}}&batch={{batch}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{local_doc}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{rev}}",
											"equals": true
										},
										{
											"key": "batch",
											"value": "{{batch}}",
											"equals": true
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "56",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 20:48:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"conflict\",\"reason\":\"Document update conflict\"}"
						},
						{
							"id": "a2803cf8-62f4-44db-b5a6-20db55919954",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_local/{{localdocid}}?rev={{localrev}}&batch={{batch}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_local",
										"{{localdocid}}"
									],
									"query": [
										{
											"key": "rev",
											"value": "{{localrev}}",
											"equals": true
										},
										{
											"key": "batch",
											"value": "{{batch}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 21:04:01 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/{{docid}}/attachment?rev={{rev}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"{{docid}}",
								"attachment"
							],
							"query": [
								{
									"key": "rev",
									"value": "{{rev}}",
									"equals": true
								}
							]
						},
						"description": "This request retrieves a file attachment associated with the document. The raw data of the associated attachment is returned (just as if you were accessing a static file). The Content-Type response header is the same content type set when the document attachment was added to the database.\n"
					},
					"response": []
				},
				{
					"name": "Purge document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c7a4c3e-a132-4ca6-84f1-ac8feaa6c86e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"a_doc_id\": [\n    \"{{docid}}\"\n  ]\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_purge",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_purge"
							]
						},
						"description": "The purge command provides a way to remove a document from the bucket itself. The operation removes all the revisions (active and tombstones) for the specified document(s). A common usage of this endpoint is to remove tombstone documents that are no longer needed, thus recovering storage space and reducing data replicated to clients. Other clients are not notified when a revision has been purged; so in order to purge a revision from the system it must be done from all databases (on Couchbase Lite and Sync Gateway).\n"
					},
					"response": [
						{
							"id": "ebcd1660-cadb-4f2f-a2d7-6b200bc2c8c9",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"a_doc_id\": [\n    \"{{docid}}\"\n  ]\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_purge",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_purge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "private, max-age=0, no-cache, no-store",
									"name": "Cache-Control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "Content-Length",
									"value": "41",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 26 Jan 2018 22:39:46 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"purged\":{\r\n}\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "query",
			"description": null,
			"item": [
				{
					"name": "Create / Update views of a design document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9af61ac5-49e9-4235-870d-b8603163768f",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"_rev\":\"{{rev}}\",\"views\": {\"{{view}}\": {\"map\": \"function(doc, meta) {if (doc.value == \\\"foo\\\") {emit(doc.id, null);}}\"}}}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_design",
								"{{ddoc}}"
							]
						},
						"description": null
					},
					"response": [
						{
							"id": "c73b15b7-6c23-44e2-97e1-198f5caa8eb1",
							"name": "201",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"_rev\":\"{{rev}}\",\"views\": {\"{{view}}\": {\"map\": \"function(doc, meta) {if (doc.value == \\\"foo\\\") {emit(doc.id, null);}}\"}}}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:40:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Views of a design document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18088571-65a4-48b2-89c9-1f477374bf4b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_design",
								"{{ddoc}}"
							]
						},
						"description": "Query a design document.\n"
					},
					"response": [
						{
							"id": "6fa77b9d-9b1d-48d9-b75f-d3e392ef132d",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "470",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:43:19 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"views\":{\"foobarview\":{\"map\":\"function(doc,meta) {\\n\\t                    var sync = meta.xattrs._sync;\\n\\t                    if (sync === undefined || meta.id.substring(0,6) == \\\"_sync:\\\")\\n\\t                      return;\\n\\t                    if ((sync.flags \\u0026 1) || sync.deleted)\\n\\t                      return;\\n\\t                    meta.rev = sync.rev;\\n\\t\\t\\t\\t\\t\\t(function(doc, meta) {if (doc.value == \\\"foo\\\") {emit(doc.id, null);}}) (doc, meta);}\"}}}"
						}
					]
				},
				{
					"name": "Query a view",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0e28600-eeec-4ffb-b1f6-d6d6ddb9e71e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}/_view/{{view}}?conflicts={{conflicts}}&descending={{descending}}&endkey={{endkey}}&end_key={{end_key}}&endkey_docid={{endkey_docid}}&end_key_doc_id={{end_key_doc_id}}&include_docs={{include_docs}}&inclusive_end={{inclusive_end}}&group={{group}}&group_level={{group_level}}&key={{key}}&limit={{limit}}&skip={{skip}}&stale={{stale}}&startkey={{startkey}}&start_key={{start_key}}&startkey_docid={{startkey_docid}}&update_seq={{update_seq}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_design",
								"{{ddoc}}",
								"_view",
								"{{view}}"
							],
							"query": [
								{
									"key": "conflicts",
									"value": "{{conflicts}}",
									"equals": true
								},
								{
									"key": "descending",
									"value": "{{descending}}",
									"equals": true
								},
								{
									"key": "endkey",
									"value": "{{endkey}}",
									"equals": true
								},
								{
									"key": "end_key",
									"value": "{{end_key}}",
									"equals": true
								},
								{
									"key": "endkey_docid",
									"value": "{{endkey_docid}}",
									"equals": true
								},
								{
									"key": "end_key_doc_id",
									"value": "{{end_key_doc_id}}",
									"equals": true
								},
								{
									"key": "include_docs",
									"value": "{{include_docs}}",
									"equals": true
								},
								{
									"key": "inclusive_end",
									"value": "{{inclusive_end}}",
									"equals": true
								},
								{
									"key": "group",
									"value": "{{group}}",
									"equals": true
								},
								{
									"key": "group_level",
									"value": "{{group_level}}",
									"equals": true
								},
								{
									"key": "key",
									"value": "{{key}}",
									"equals": true
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"equals": true
								},
								{
									"key": "skip",
									"value": "{{skip}}",
									"equals": true
								},
								{
									"key": "stale",
									"value": "{{stale}}",
									"equals": true
								},
								{
									"key": "startkey",
									"value": "{{startkey}}",
									"equals": true
								},
								{
									"key": "start_key",
									"value": "{{start_key}}",
									"equals": true
								},
								{
									"key": "startkey_docid",
									"value": "{{startkey_docid}}",
									"equals": true
								},
								{
									"key": "update_seq",
									"value": "{{update_seq}}",
									"equals": true
								}
							]
						},
						"description": "Query a view on a design document. This endpoint is only accessible if you have enabled views in the Sync Gateway configuration file (see [this guide](/documentation/mobile/current/develop/guides/sync-gateway/views/index.html) for more information on this topic).\n"
					},
					"response": [
						{
							"id": "7925f83e-cac2-41b1-8cc3-832694c929b2",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}/_view/{{view}}?conflicts={{conflicts}}&descending={{descending}}&endkey={{endkey}}&end_key={{end_key}}&endkey_docid={{endkey_docid}}&end_key_doc_id={{end_key_doc_id}}&include_docs={{include_docs}}&inclusive_end={{inclusive_end}}&group={{group}}&group_level={{group_level}}&key={{key}}&limit={{limit}}&skip={{skip}}&stale={{stale}}&startkey={{startkey}}&start_key={{start_key}}&startkey_docid={{startkey_docid}}&update_seq={{update_seq}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}",
										"_view",
										"{{view}}"
									],
									"query": [
										{
											"key": "conflicts",
											"value": "{{conflicts}}",
											"equals": true
										},
										{
											"key": "descending",
											"value": "{{descending}}",
											"equals": true
										},
										{
											"key": "endkey",
											"value": "{{endkey}}",
											"equals": true
										},
										{
											"key": "end_key",
											"value": "{{end_key}}",
											"equals": true
										},
										{
											"key": "endkey_docid",
											"value": "{{endkey_docid}}",
											"equals": true
										},
										{
											"key": "end_key_doc_id",
											"value": "{{end_key_doc_id}}",
											"equals": true
										},
										{
											"key": "include_docs",
											"value": "{{include_docs}}",
											"equals": true
										},
										{
											"key": "inclusive_end",
											"value": "{{inclusive_end}}",
											"equals": true
										},
										{
											"key": "group",
											"value": "{{group}}",
											"equals": true
										},
										{
											"key": "group_level",
											"value": "{{group_level}}",
											"equals": true
										},
										{
											"key": "key",
											"value": "{{key}}",
											"equals": true
										},
										{
											"key": "limit",
											"value": "{{limit}}",
											"equals": true
										},
										{
											"key": "skip",
											"value": "{{skip}}",
											"equals": true
										},
										{
											"key": "stale",
											"value": "{{stale}}",
											"equals": true
										},
										{
											"key": "startkey",
											"value": "{{startkey}}",
											"equals": true
										},
										{
											"key": "start_key",
											"value": "{{start_key}}",
											"equals": true
										},
										{
											"key": "startkey_docid",
											"value": "{{startkey_docid}}",
											"equals": true
										},
										{
											"key": "update_seq",
											"value": "{{update_seq}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "675",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:43:55 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"total_rows\":10,\"rows\":[{\"id\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"key\":null,\"value\":null},{\"id\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"key\":null,\"value\":null},{\"id\":\"70990ab0d9a3bb0fec069d284363efe1\",\"key\":null,\"value\":null},{\"id\":\"77f1ed7f21763bde7809e13584512a3b\",\"key\":null,\"value\":null},{\"id\":\"8e724c26b2db621e7fefd1b1069dc2a5\",\"key\":null,\"value\":null},{\"id\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"key\":null,\"value\":null},{\"id\":\"db3627e655768550cc024933def3f265\",\"key\":null,\"value\":null},{\"id\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"key\":null,\"value\":null},{\"id\":\"ee83120452394e09af05169b43c0a493\",\"key\":null,\"value\":null},{\"id\":\"testdoc\",\"key\":null,\"value\":null}],\"Collator\":{}}"
						}
					]
				},
				{
					"name": "Query Views on a design document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b52d8b67-5135-44d2-8caf-aa28b330ab9d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}/_view/{{view}}?include_docs={{include_docs}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_design",
								"{{ddoc}}",
								"_view",
								"{{view}}"
							],
							"query": [
								{
									"key": "include_docs",
									"value": "{{include_docs}}",
									"equals": true
								}
							]
						},
						"description": "Query a design document.\n"
					},
					"response": [
						{
							"id": "8d5fda72-c228-46d0-a318-55e846e1dcde",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}/_view/{{view}}?include_docs={{include_docs}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}",
										"_view",
										"{{view}}"
									],
									"query": [
										{
											"key": "include_docs",
											"value": "{{include_docs}}",
											"equals": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "675",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:45:40 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"total_rows\":10,\"rows\":[{\"id\":\"6e5a3f6feef6f1c1c32503adbf33bfd3\",\"key\":null,\"value\":null},{\"id\":\"6e9f8da6e5e43505a87c3b051f519fc8\",\"key\":null,\"value\":null},{\"id\":\"70990ab0d9a3bb0fec069d284363efe1\",\"key\":null,\"value\":null},{\"id\":\"77f1ed7f21763bde7809e13584512a3b\",\"key\":null,\"value\":null},{\"id\":\"8e724c26b2db621e7fefd1b1069dc2a5\",\"key\":null,\"value\":null},{\"id\":\"8f11f17baaa78fc18187f73ba0a5e6f4\",\"key\":null,\"value\":null},{\"id\":\"db3627e655768550cc024933def3f265\",\"key\":null,\"value\":null},{\"id\":\"df31ffb9fed4f127d608c2a2d97b0f97\",\"key\":null,\"value\":null},{\"id\":\"ee83120452394e09af05169b43c0a493\",\"key\":null,\"value\":null},{\"id\":\"testdoc\",\"key\":null,\"value\":null}],\"Collator\":{}}"
						}
					]
				},
				{
					"name": "Delete design document",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e738c760-c478-4622-9286-10b0b121015a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_design",
								"{{ddoc}}"
							]
						},
						"description": "Delete a design document.\n"
					},
					"response": [
						{
							"id": "71bc6785-2dce-4678-9375-235caae96441",
							"name": "500",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "111",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 04:16:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Internal Server Error\",\"reason\":\"Internal error: {\\\"error\\\":\\\"not_found\\\",\\\"reason\\\":\\\"deleted\\\"}\\n\"}"
						},
						{
							"id": "34560a80-9509-450e-8ef0-7cabb2e4a37c",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_design/{{ddoc}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_design",
										"{{ddoc}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:46:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "oidc",
			"description": null,
			"item": [
				{
					"name": "OpenID Connect Authentication.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_oidc?offline={{offline}}&provider={{provider}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_oidc"
							],
							"query": [
								{
									"key": "offline",
									"value": "{{offline}}"
								},
								{
									"key": "provider",
									"value": "{{provider}}"
								}
							]
						},
						"description": "Called by clients to initiate the OIDC Authorization Code flow. \n"
					},
					"response": [
						{
							"id": "2d2241bb-6a65-4099-a4a3-9fe09eed5e0d",
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_oidc?offline={{offline}}&provider={{provider}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_oidc"
									],
									"query": [
										{
											"key": "offline",
											"value": "{{offline}}",
											"equals": true
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"equals": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "84",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 15:59:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Bad Request\",\"reason\":\"OpenID Connect not configured for database demodb\"}"
						}
					]
				},
				{
					"name": "OpenID Connect Authentication callback.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_oidc_callback?code={{code}}&provider={{provider}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_oidc_callback"
							],
							"query": [
								{
									"key": "code",
									"value": "{{code}}"
								},
								{
									"key": "provider",
									"value": "{{provider}}"
								}
							]
						},
						"description": "Sync Gateway callback URL that clients are redirected to by the OpenID Connect provider. \n"
					},
					"response": [
						{
							"id": "0ed91089-8be5-4784-a096-48dd66a45e56",
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_oidc_callback?code={{code}}&provider={{provider}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_oidc_callback"
									],
									"query": [
										{
											"key": "code",
											"value": "{{code}}",
											"equals": true
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"equals": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "72",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:00:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Bad Request\",\"reason\":\"Code must be present on oidc callback\"}"
						}
					]
				},
				{
					"name": "OpenID Connect Authentication.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_oidc_challenge?offline={{offline}}&provider={{provider}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_oidc_challenge"
							],
							"query": [
								{
									"key": "offline",
									"value": "{{offline}}"
								},
								{
									"key": "provider",
									"value": "{{provider}}"
								}
							]
						},
						"description": "Called by clients to initiate the OIDC Authorization Code flow. \n"
					},
					"response": [
						{
							"id": "8ec31d9a-68ce-417a-b3aa-723b2132551d",
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_oidc_challenge?offline={{offline}}&provider={{provider}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_oidc_challenge"
									],
									"query": [
										{
											"key": "offline",
											"value": "{{offline}}",
											"equals": true
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"equals": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "84",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:00:20 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Bad Request\",\"reason\":\"OpenID Connect not configured for database demodb\"}"
						}
					]
				},
				{
					"name": "OpenID Connect refresh.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_oidc_refresh?refresh_token={{refresh_token}}&provider={{provider}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_oidc_refresh"
							],
							"query": [
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}"
								},
								{
									"key": "provider",
									"value": "{{provider}}"
								}
							]
						},
						"description": "Used to obtain a new OpenID Connect ID token based on the provided refresh token.\n"
					},
					"response": [
						{
							"id": "913b7131-bff7-46dd-bfaa-11614531807e",
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_oidc_refresh?refresh_token={{refresh_token}}&provider={{provider}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_oidc_refresh"
									],
									"query": [
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"equals": true
										},
										{
											"key": "provider",
											"value": "{{provider}}",
											"equals": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "81",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:00:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"Bad Request\",\"reason\":\"Refresh token must be present for oidc refresh\"}"
						}
					]
				}
			]
		},
		{
			"name": "session",
			"description": null,
			"item": [
				{
					"name": "Creates a new session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01fdb557-f9c7-470b-b818-443416a3bb10",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"sessionid\",jsonData[\"session_id\"]);",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00ab33c5-0d6d-48b4-8edd-be586188010c",
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{name}}\",\n  \"ttl\": 86400\n}"
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_session",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_session"
							]
						},
						"description": "If the credentials provided in the request body are valid, the session is created with an idle session timeout of 24 hours. An idle session timeout in the context of Sync Gateway is defined as the following: if 10% or more of the current expiration time has elapsed when a subsequent request with that session id is processed, the session's expiry time is automatically updated to 24 hours from that time.\n"
					},
					"response": [
						{
							"id": "2dd7d710-3ce7-4538-83e3-5bf9ae49ab57",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{name}}\",\n  \"ttl\": 86400\n}"
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_session",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "135",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:55:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"session_id\":\"129694e799527f8e0639f9d76b1007d97d392737\",\"expires\":\"2018-01-29T03:55:27.443673194Z\",\"cookie_name\":\"SyncGatewaySession\"}"
						}
					]
				},
				{
					"name": "Retrieves information about a session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "682979d0-bad7-47ff-8ad3-d4e262e8f6e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_session/{{sessionid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_session",
								"{{sessionid}}"
							]
						},
						"description": "This request retrieves information about a session.\n"
					},
					"response": [
						{
							"id": "1466c5fc-c6e4-4f17-9393-6130d7cd3189",
							"name": "404",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:56:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						},
						{
							"id": "0d444f0d-2dd8-496b-8f62-417fcb7a4a8d",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "110",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 04:01:26 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"authentication_handlers\":[\"default\",\"cookie\"],\"ok\":true,\"userCtx\":{\"channels\":{\"!\":1,\"*\":2},\"name\":\"admin\"}}"
						}
					]
				},
				{
					"name": "Deletes a specific user session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session/{{sessionid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_user",
								"{{name}}",
								"_session",
								"{{sessionid}}"
							]
						},
						"description": "This request delete the specified session for the specified user."
					},
					"response": [
						{
							"id": "d6b7bcb8-b596-45a0-8ea0-c1c033da0603",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{name}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 04:02:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "7e9d90d7-2ae2-4524-8e4b-a006df2cd00b",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{name}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:58:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						},
						{
							"id": "252f10c9-5af1-48ef-83d8-528f0ec2071c",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{name}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 04:02:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Deletes a single session",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b8ef8c9-30d6-4026-999b-ea58b874af5b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 or 404 \", function () {",
									"     pm.expect(pm.response.code).to.be.oneOf([200 ,404]) ;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_session/{{sessionid}}",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_session",
								"{{sessionid}}"
							]
						},
						"description": "This request deletes a single session.\n"
					},
					"response": [
						{
							"id": "2956d3d4-5858-4f03-ba5b-29a9775c1396",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_session/{{sessionid}}",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_session",
										"{{sessionid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "40",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 04:07:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"missing\"}"
						}
					]
				},
				{
					"name": "Deletes all user sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81912b77-4eec-4c3d-ac77-f71e3b0ab3e7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 or 404 \", function () {",
									"     pm.expect(pm.response.code).to.be.oneOf([200 ,404]) ;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{db}}",
								"_user",
								"{{name}}",
								"_session"
							]
						},
						"description": "This request delete the session for the specified user."
					},
					"response": [
						{
							"id": "01ddb029-170a-4d12-9efd-faa1fc0bee49",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{db}}/_user/{{name}}/_session",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{db}}",
										"_user",
										"{{name}}",
										"_session"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "0",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 28 Jan 2018 03:58:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cleanup",
			"description": null,
			"item": [
				{
					"name": "Delete database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f86f126-2522-4666-9b4b-dcc6528c438f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{adminurl}}/{{walrusdb}}/",
							"host": [
								"{{adminurl}}"
							],
							"path": [
								"{{walrusdb}}",
								""
							]
						},
						"description": "Delete database"
					},
					"response": [
						{
							"id": "59ce4971-0ea9-401f-b650-71ceeb1be557",
							"name": "200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Length",
									"value": "2",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sat, 27 Jan 2018 16:17:55 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"id": "87ba3cbf-8f9b-47fb-8748-a21888f7cf8b",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{adminurl}}/{{walrusdb}}/",
									"host": [
										"{{adminurl}}"
									],
									"path": [
										"{{walrusdb}}",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "66",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 29 Jan 2018 04:06:45 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Couchbase Sync Gateway/1.5.0",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\"error\":\"not_found\",\"reason\":\"no such database \\\"walrustestdb\\\"\"}"
						}
					]
				}
			]
		}
	]
}